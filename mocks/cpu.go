// Code generated by MockGen. DO NOT EDIT.
// Source: ./cpu.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	interfaces "github.com/PierreKieffer/pitop/interfaces"
	gomock "github.com/golang/mock/gomock"
)

// MockCPUCollector is a mock of CPUCollector interface.
type MockCPUCollector struct {
	ctrl     *gomock.Controller
	recorder *MockCPUCollectorMockRecorder
}

// MockCPUCollectorMockRecorder is the mock recorder for MockCPUCollector.
type MockCPUCollectorMockRecorder struct {
	mock *MockCPUCollector
}

// NewMockCPUCollector creates a new mock instance.
func NewMockCPUCollector(ctrl *gomock.Controller) *MockCPUCollector {
	mock := &MockCPUCollector{ctrl: ctrl}
	mock.recorder = &MockCPUCollectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCPUCollector) EXPECT() *MockCPUCollectorMockRecorder {
	return m.recorder
}

// ComputeCPULoad mocks base method.
func (m *MockCPUCollector) ComputeCPULoad() *interfaces.CPULoad {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ComputeCPULoad")
	ret0, _ := ret[0].(*interfaces.CPULoad)
	return ret0
}

// ComputeCPULoad indicates an expected call of ComputeCPULoad.
func (mr *MockCPUCollectorMockRecorder) ComputeCPULoad() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComputeCPULoad", reflect.TypeOf((*MockCPUCollector)(nil).ComputeCPULoad))
}

// GetCoresStats mocks base method.
func (m *MockCPUCollector) GetCoresStats() *interfaces.CPUStat {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCoresStats")
	ret0, _ := ret[0].(*interfaces.CPUStat)
	return ret0
}

// GetCoresStats indicates an expected call of GetCoresStats.
func (mr *MockCPUCollectorMockRecorder) GetCoresStats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCoresStats", reflect.TypeOf((*MockCPUCollector)(nil).GetCoresStats))
}
