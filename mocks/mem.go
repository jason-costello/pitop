// Code generated by MockGen. DO NOT EDIT.
// Source: ./mem.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	interfaces "github.com/PierreKieffer/pitop/interfaces"
	gomock "github.com/golang/mock/gomock"
)

// MockMemInfo is a mock of MemInfo interface.
type MockMemInfo struct {
	ctrl     *gomock.Controller
	recorder *MockMemInfoMockRecorder
}

// MockMemInfoMockRecorder is the mock recorder for MockMemInfo.
type MockMemInfoMockRecorder struct {
	mock *MockMemInfo
}

// NewMockMemInfo creates a new mock instance.
func NewMockMemInfo(ctrl *gomock.Controller) *MockMemInfo {
	mock := &MockMemInfo{ctrl: ctrl}
	mock.recorder = &MockMemInfoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMemInfo) EXPECT() *MockMemInfoMockRecorder {
	return m.recorder
}

// GetMemStats mocks base method.
func (m *MockMemInfo) ExtractMemStats() *interfaces.MemStat {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExtractMemStats")
	ret0, _ := ret[0].(*interfaces.MemStat)
	return ret0
}

// GetMemStats indicates an expected call of GetMemStats.
func (mr *MockMemInfoMockRecorder) GetMemStats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractMemStats", reflect.TypeOf((*MockMemInfo)(nil).ExtractMemStats))
}
